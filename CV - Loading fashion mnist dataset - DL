It is a more challenging classification problem than MNIST and top results are achieved by
deep learning convolutional neural networks with a classification accuracy of about 90% to 95%
on the hold out test dataset. The example below loads the Fashion-MNIST dataset using the
Keras API and creates a plot of the first nine images in the training dataset.

#Loading fashion mnist dataset
from matplotlib import pyplot
from keras.datasets import fashion_mnist

#load dataset
(trainX, trainy), (testX, testy) = fashion_mnist.load_data()

#summarize loaded dataset
print('Train: X=%s, y=%s' % (trainX.shape, trainy.shape))
print('Test: X=%s, y=%s' % (testX.shape, testy.shape))

#plot first few images
for i in range(9):
  #define subplot
  pyplot.subplot(330 + 1 + i)
  #plot raw pixel data
  pyplot.imshow(trainX[i], cmap=pyplot.get_cmap('gray'))
#show the figure
pyplot.show()

Results:
Train: X=(60000, 28, 28), y=(60000,)
Test: X=(10000, 28, 28), y=(10000,)

Running the example loads the Fashion-MNIST train and test dataset and prints their shape.
We can see that there are 60,000 examples in the training dataset and 10,000 in the test dataset
and that images are indeed square with 28 Ã— 28 pixels.
