Before we dive into the usage of the ImageDataGenerator class for preparing image data, we
must select an image dataset on which to test the generator. The MNIST problem, is an image
classification problem comprised of 70,000 images of handwritten digits. The goal of the problem
is to classify a given image of a handwritten digit as an integer from 0 to 9. As such, it is a
multiclass image classification problem.

This dataset is provided as part of the Keras library and can be automatically downloaded (if
needed) and loaded into memory by a call to the keras.datasets.mnist.load data() function.
The function returns two tuples: one for the training inputs and outputs and one for the test
inputs and outputs. Note, if this is the first time using the MNIST dataset in Keras, the dataset
will be downloaded and placed in the .keras/datasets/ directory in your home directory. The
dataset is only 11 megabytes and will download very quickly.

#Handwritten Image Classification with MNIST dataset
from keras.datasets import mnist
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

#summarize dataset shape
print('Train', train_images.shape, train_labels.shape)
print('Test', (test_images.shape, test_labels.shape))

#summarize pixel values
print('Train', train_images.min(), train_images.max(), train_images.mean(),
     train_images.std())
print('Train', test_images.min(), test_images.max(), test_images.mean(), test_images.std())

Results:
Train (60000, 28, 28) (60000,)
Test ((10000, 28, 28), (10000,))
Train 0 255 33.318421449829934 78.56748998339798
Train 0 255 33.791224489795916 79.17246322228644

Running the example first loads the dataset into memory. Then the shape of the train and
test datasets is reported. We can see that all images are 28 by 28 pixels with a single channel
for black-and-white images. There are 60,000 images for the training dataset and 10,000 for the
test dataset. We can also see that pixel values are integer values between 0 and 255 and that
the mean and standard deviation of the pixel values are similar between the two datasets.
