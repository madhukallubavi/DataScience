The ImageDataGenerator class can be used to rescale pixel values from the range of 0-255 to the
range 0-1 preferred for neural network models. Scaling data to the range of 0-1 is traditionally
referred to as normalization. This can be achieved by setting the rescale argument to a ratio by
which each pixel can be multiplied to achieve the desired range. In this case, the ratio is 1
255 or about 0.0039.

#Normalizing image dataset
from keras.datasets import mnist
from keras.preprocessing.image import ImageDataGenerator

#load dataset
(trainX, trainY), (testX, testY) = mnist.load_data()

#reshape dataset to have single channel
width, height, channels = trainX.shape[1], trainX.shape[2], 1
trainX = trainX.reshape((trainX.shape[0], width, height, channels))
testX = testX.reshape((testX.shape[0], width, height, channels))

#confirm scale of pixels
print('Train min=%.3f, max=%.3f' % (trainX.min(), trainX.max()))
print('Test min=%.3f, max=%.3f' % (testX.min(), testX.max()))

#create generator (1.0/255.0 = 0.003921)
datagen = ImageDataGenerator(rescale=1.0/255.0)
#Note: there is no need to fit generator in this case

#prepare a iterators to scale images
train_iterator = datagen.flow(trainX, trainY, batch_size=64)
test_iterator = datagen.flow(testX, testY, batch_size=64)
print('Batches train=%d, test=%d' % (len(train_iterator), len(test_iterator)))

#confirm scaling works
batchX, batchY = train_iterator.next()
print('Batch shape=%s, min=%.3f, max=%.3f' % (batchX.shape, batchX.min(), batchX.max()))

Results:
Train min=0.000, max=255.000
Test min=0.000, max=255.000
Batches train=938, test=157
Batch shape=(64, 28, 28, 1), min=0.000, max=1.000

Running the example first reports the minimum and maximum pixel value for the train
and test datasets. The MNIST dataset only has a single channel because the images are black
and white (grayscale), but if the images were color, the min and max pixel values would be
calculated across all channels in all images in the training dataset, i.e. there would not be a
separate mean value for each channel.

The ImageDataGenerator does not need to be fit on the training dataset as there is nothing
that needs to be calculated, we have provided the scale factor directly. A single batch of
normalized images is retrieved and we can confirm that the min and max pixel values are zero
and one respectively.
